name: Web3ExplorerWs CD
on:
    push:
        branches:
          - main
        tags:
            - v*
env:
    node-version: 20.11.1

jobs:
  desktop-build:
    name: desktop-build
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            command: make:intel
            tag: x64
            dist: /apps/desktop/out/make/deb/x64
          - os: ubuntu-latest
            command: make:arm
            tag: arm64
            dist: /apps/desktop/out/make/deb/arm64
          - os: windows-latest
            command: make:intel
            tag: x64
            dist: /apps/desktop/out/make/squirrel.windows/x64/*Setup.exe


    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
      REACT_APP_TG_BOT_ID: ${{ secrets.REACT_APP_TG_BOT_ID }}
      REACT_APP_TONCONSOLE_API: https://pro.tonconsole.com
      REACT_APP_TG_BOT_ORIGIN: https://tonkeeper.com
      REACT_APP_APTABASE: ${{ secrets.VITE_APP_APTABASE }}
      REACT_APP_APTABASE_HOST: https://anonymous-analytics.tonkeeper.com
      REACT_APP_STONFI_REFERRAL_ADDRESS: ${{ secrets.REACT_APP_STONFI_REFERRAL_ADDRESS }}
      DEBUG: electron*

    steps:
      - name: Checkout to git repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}

      - name: Enable Corepack
        run: |
          corepack enable

      - name: Decode service account into a file
        if: runner.os == 'macOS'
        env:
          CREDENTIALS: ${{ secrets.APPLE_API_KEY }}
        run: |
          echo $CREDENTIALS | base64 -d > ${{ github.workspace }}/AuthKey.p8

      - name: Configure keychain
        if: runner.os == 'macOS'
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IDENTITY_P12_B64 }}
          p12-password: ${{ secrets.IDENTITY_PASSPHRASE }}

      - name: Run install
        uses: borales/actions-yarn@v5
        with:
          cmd: install

      - name: Run build intel distributive
        uses: borales/actions-yarn@v5
        with:
          cmd: ${{ matrix.command }}
          dir: 'apps/desktop'

      - name: Upload zip distributives to artifacts
        uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: Tonkeeper Desktop ${{ runner.os }} x64 archive
          retention-days: 10
          path: |
            ${{ github.workspace }}/apps/desktop/out/make/zip/**/*.zip

      - name: Upload distributives to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Tonkeeper Desktop ${{ runner.os }} ${{ matrix.tag }}
          retention-days: 10
          path: |
            ${{ github.workspace }}${{ matrix.dist }}

      - name: Clean-up credentials
        if: always() && runner.os == 'macOS'
        run: |
          rm ${{ github.workspace }}/AuthKey.p8


